// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: schemas.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Post_Stage int32

const (
	Post_S_WIP    Post_Stage = 0
	Post_S_REVIEW Post_Stage = 1
	Post_S_PUB    Post_Stage = 2
	Post_S_REV    Post_Stage = 3
)

// Enum value maps for Post_Stage.
var (
	Post_Stage_name = map[int32]string{
		0: "S_WIP",
		1: "S_REVIEW",
		2: "S_PUB",
		3: "S_REV",
	}
	Post_Stage_value = map[string]int32{
		"S_WIP":    0,
		"S_REVIEW": 1,
		"S_PUB":    2,
		"S_REV":    3,
	}
)

func (x Post_Stage) Enum() *Post_Stage {
	p := new(Post_Stage)
	*p = x
	return p
}

func (x Post_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Post_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[0].Descriptor()
}

func (Post_Stage) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[0]
}

func (x Post_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Post_Stage.Descriptor instead.
func (Post_Stage) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{0, 0}
}

type Post_Status int32

const (
	Post_S_DRAFT       Post_Status = 0
	Post_S_ARCHIVED    Post_Status = 1
	Post_S_TRASH       Post_Status = 2
	Post_S_VISIBLE_ON  Post_Status = 3
	Post_S_VISIBLE_OFF Post_Status = 4
)

// Enum value maps for Post_Status.
var (
	Post_Status_name = map[int32]string{
		0: "S_DRAFT",
		1: "S_ARCHIVED",
		2: "S_TRASH",
		3: "S_VISIBLE_ON",
		4: "S_VISIBLE_OFF",
	}
	Post_Status_value = map[string]int32{
		"S_DRAFT":       0,
		"S_ARCHIVED":    1,
		"S_TRASH":       2,
		"S_VISIBLE_ON":  3,
		"S_VISIBLE_OFF": 4,
	}
)

func (x Post_Status) Enum() *Post_Status {
	p := new(Post_Status)
	*p = x
	return p
}

func (x Post_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Post_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[1].Descriptor()
}

func (Post_Status) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[1]
}

func (x Post_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Post_Status.Descriptor instead.
func (Post_Status) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{0, 1}
}

type Comment_TargetType int32

const (
	Comment_T_POST    Comment_TargetType = 0
	Comment_T_COMMENT Comment_TargetType = 1
)

// Enum value maps for Comment_TargetType.
var (
	Comment_TargetType_name = map[int32]string{
		0: "T_POST",
		1: "T_COMMENT",
	}
	Comment_TargetType_value = map[string]int32{
		"T_POST":    0,
		"T_COMMENT": 1,
	}
)

func (x Comment_TargetType) Enum() *Comment_TargetType {
	p := new(Comment_TargetType)
	*p = x
	return p
}

func (x Comment_TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Comment_TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[2].Descriptor()
}

func (Comment_TargetType) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[2]
}

func (x Comment_TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Comment_TargetType.Descriptor instead.
func (Comment_TargetType) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{1, 0}
}

type React_Type int32

const (
	React_T_UPVOTE   React_Type = 0
	React_T_DOWNVOTE React_Type = 1
	React_T_HEART    React_Type = 2
	React_T_CONFUSED React_Type = 3
	React_T_LAUGH    React_Type = 4
	React_T_SAD      React_Type = 5
	React_T_HORRAY   React_Type = 6
	React_T_CARE     React_Type = 7
)

// Enum value maps for React_Type.
var (
	React_Type_name = map[int32]string{
		0: "T_UPVOTE",
		1: "T_DOWNVOTE",
		2: "T_HEART",
		3: "T_CONFUSED",
		4: "T_LAUGH",
		5: "T_SAD",
		6: "T_HORRAY",
		7: "T_CARE",
	}
	React_Type_value = map[string]int32{
		"T_UPVOTE":   0,
		"T_DOWNVOTE": 1,
		"T_HEART":    2,
		"T_CONFUSED": 3,
		"T_LAUGH":    4,
		"T_SAD":      5,
		"T_HORRAY":   6,
		"T_CARE":     7,
	}
)

func (x React_Type) Enum() *React_Type {
	p := new(React_Type)
	*p = x
	return p
}

func (x React_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (React_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[3].Descriptor()
}

func (React_Type) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[3]
}

func (x React_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use React_Type.Descriptor instead.
func (React_Type) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{2, 0}
}

type React_TargetType int32

const (
	React_T_USER    React_TargetType = 0
	React_T_COMMENT React_TargetType = 1
	React_T_POST    React_TargetType = 2
)

// Enum value maps for React_TargetType.
var (
	React_TargetType_name = map[int32]string{
		0: "T_USER",
		1: "T_COMMENT",
		2: "T_POST",
	}
	React_TargetType_value = map[string]int32{
		"T_USER":    0,
		"T_COMMENT": 1,
		"T_POST":    2,
	}
)

func (x React_TargetType) Enum() *React_TargetType {
	p := new(React_TargetType)
	*p = x
	return p
}

func (x React_TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (React_TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[4].Descriptor()
}

func (React_TargetType) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[4]
}

func (x React_TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use React_TargetType.Descriptor instead.
func (React_TargetType) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{2, 1}
}

type User_Type int32

const (
	User_T_NORMAL User_Type = 0
	User_T_AUTHOR User_Type = 1
)

// Enum value maps for User_Type.
var (
	User_Type_name = map[int32]string{
		0: "T_NORMAL",
		1: "T_AUTHOR",
	}
	User_Type_value = map[string]int32{
		"T_NORMAL": 0,
		"T_AUTHOR": 1,
	}
)

func (x User_Type) Enum() *User_Type {
	p := new(User_Type)
	*p = x
	return p
}

func (x User_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[5].Descriptor()
}

func (User_Type) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[5]
}

func (x User_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_Type.Descriptor instead.
func (User_Type) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{3, 0}
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HeadlineText  string      `protobuf:"bytes,2,opt,name=headline_text,json=headlineText,proto3" json:"headline_text,omitempty"`
	SubjectText   string      `protobuf:"bytes,3,opt,name=subject_text,json=subjectText,proto3" json:"subject_text,omitempty"`
	User          *User       `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Comments      []*Comment  `protobuf:"bytes,5,rep,name=comments,proto3" json:"comments,omitempty"`
	Keywords      []string    `protobuf:"bytes,6,rep,name=keywords,proto3" json:"keywords,omitempty"`
	ContentUrl    string      `protobuf:"bytes,7,opt,name=content_url,json=contentUrl,proto3" json:"content_url,omitempty"`
	BlogUrl       string      `protobuf:"bytes,8,opt,name=blog_url,json=blogUrl,proto3" json:"blog_url,omitempty"`
	MultimediaUrl []string    `protobuf:"bytes,9,rep,name=multimedia_url,json=multimediaUrl,proto3" json:"multimedia_url,omitempty"`
	Revisions     []*Post     `protobuf:"bytes,10,rep,name=revisions,proto3" json:"revisions,omitempty"`
	Stage         Post_Stage  `protobuf:"varint,11,opt,name=stage,proto3,enum=blogs.Post_Stage" json:"stage,omitempty"`
	Status        Post_Status `protobuf:"varint,12,opt,name=status,proto3,enum=blogs.Post_Status" json:"status,omitempty"`
	RevisedAt     *uint32     `protobuf:"varint,13,opt,name=revised_at,json=revisedAt,proto3,oneof" json:"revised_at,omitempty"`
	ArchivedAt    *uint32     `protobuf:"varint,14,opt,name=archived_at,json=archivedAt,proto3,oneof" json:"archived_at,omitempty"`
	PublishedAt   *uint32     `protobuf:"varint,15,opt,name=published_at,json=publishedAt,proto3,oneof" json:"published_at,omitempty"`
	CreatedAt     uint64      `protobuf:"varint,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Reacts        []*React    `protobuf:"bytes,17,rep,name=reacts,proto3" json:"reacts,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Post) GetHeadlineText() string {
	if x != nil {
		return x.HeadlineText
	}
	return ""
}

func (x *Post) GetSubjectText() string {
	if x != nil {
		return x.SubjectText
	}
	return ""
}

func (x *Post) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Post) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *Post) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *Post) GetContentUrl() string {
	if x != nil {
		return x.ContentUrl
	}
	return ""
}

func (x *Post) GetBlogUrl() string {
	if x != nil {
		return x.BlogUrl
	}
	return ""
}

func (x *Post) GetMultimediaUrl() []string {
	if x != nil {
		return x.MultimediaUrl
	}
	return nil
}

func (x *Post) GetRevisions() []*Post {
	if x != nil {
		return x.Revisions
	}
	return nil
}

func (x *Post) GetStage() Post_Stage {
	if x != nil {
		return x.Stage
	}
	return Post_S_WIP
}

func (x *Post) GetStatus() Post_Status {
	if x != nil {
		return x.Status
	}
	return Post_S_DRAFT
}

func (x *Post) GetRevisedAt() uint32 {
	if x != nil && x.RevisedAt != nil {
		return *x.RevisedAt
	}
	return 0
}

func (x *Post) GetArchivedAt() uint32 {
	if x != nil && x.ArchivedAt != nil {
		return *x.ArchivedAt
	}
	return 0
}

func (x *Post) GetPublishedAt() uint32 {
	if x != nil && x.PublishedAt != nil {
		return *x.PublishedAt
	}
	return 0
}

func (x *Post) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Post) GetReacts() []*React {
	if x != nil {
		return x.Reacts
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	User        *User              `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	CommentText string             `protobuf:"bytes,3,opt,name=comment_text,json=commentText,proto3" json:"comment_text,omitempty"`
	Replies     []*Comment         `protobuf:"bytes,4,rep,name=replies,proto3" json:"replies,omitempty"`
	Reacts      []*React           `protobuf:"bytes,5,rep,name=reacts,proto3" json:"reacts,omitempty"`
	Edited      bool               `protobuf:"varint,7,opt,name=edited,proto3" json:"edited,omitempty"`
	CreatedAt   uint64             `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EditedAt    *uint64            `protobuf:"varint,9,opt,name=edited_at,json=editedAt,proto3,oneof" json:"edited_at,omitempty"`
	TargetType  Comment_TargetType `protobuf:"varint,10,opt,name=target_type,json=targetType,proto3,enum=blogs.Comment_TargetType" json:"target_type,omitempty"`
	TargetId    uint64             `protobuf:"varint,11,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{1}
}

func (x *Comment) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Comment) GetCommentText() string {
	if x != nil {
		return x.CommentText
	}
	return ""
}

func (x *Comment) GetReplies() []*Comment {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *Comment) GetReacts() []*React {
	if x != nil {
		return x.Reacts
	}
	return nil
}

func (x *Comment) GetEdited() bool {
	if x != nil {
		return x.Edited
	}
	return false
}

func (x *Comment) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Comment) GetEditedAt() uint64 {
	if x != nil && x.EditedAt != nil {
		return *x.EditedAt
	}
	return 0
}

func (x *Comment) GetTargetType() Comment_TargetType {
	if x != nil {
		return x.TargetType
	}
	return Comment_T_POST
}

func (x *Comment) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type React struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint64           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type       React_Type       `protobuf:"varint,2,opt,name=type,proto3,enum=blogs.React_Type" json:"type,omitempty"`
	TargetType React_TargetType `protobuf:"varint,3,opt,name=target_type,json=targetType,proto3,enum=blogs.React_TargetType" json:"target_type,omitempty"`
	TargetId   uint64           `protobuf:"varint,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *React) Reset() {
	*x = React{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *React) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*React) ProtoMessage() {}

func (x *React) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use React.ProtoReflect.Descriptor instead.
func (*React) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{2}
}

func (x *React) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *React) GetType() React_Type {
	if x != nil {
		return x.Type
	}
	return React_T_UPVOTE
}

func (x *React) GetTargetType() React_TargetType {
	if x != nil {
		return x.TargetType
	}
	return React_T_USER
}

func (x *React) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FullName   string    `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Email      string    `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Type       User_Type `protobuf:"varint,5,opt,name=type,proto3,enum=blogs.User_Type" json:"type,omitempty"`
	PictureUrl string    `protobuf:"bytes,6,opt,name=picture_url,json=pictureUrl,proto3" json:"picture_url,omitempty"`
	CreatedAt  uint64    `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Disabled   bool      `protobuf:"varint,8,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetType() User_Type {
	if x != nil {
		return x.Type
	}
	return User_T_NORMAL
}

func (x *User) GetPictureUrl() string {
	if x != nil {
		return x.PictureUrl
	}
	return ""
}

func (x *User) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *User) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

var File_schemas_proto protoreflect.FileDescriptor

var file_schemas_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0xa2, 0x06, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0a,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x63, 0x74, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x52, 0x06, 0x72, 0x65, 0x61, 0x63, 0x74, 0x73, 0x22, 0x36, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x5f, 0x57, 0x49, 0x50, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x53, 0x5f, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x5f, 0x50, 0x55, 0x42, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x5f, 0x52, 0x45, 0x56,
	0x10, 0x03, 0x22, 0x57, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x5f, 0x41,
	0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x5f, 0x54,
	0x52, 0x41, 0x53, 0x48, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x5f, 0x56, 0x49, 0x53, 0x49,
	0x42, 0x4c, 0x45, 0x5f, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x5f, 0x56, 0x49,
	0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x04, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x96, 0x03, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x52, 0x06, 0x72, 0x65, 0x61, 0x63, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x67,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x27, 0x0a,
	0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x54,
	0x5f, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x22, 0xc8, 0x02, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x63, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x5f, 0x55, 0x50, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54,
	0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54,
	0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x55, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x5f, 0x4c, 0x41,
	0x55, 0x47, 0x48, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x5f, 0x53, 0x41, 0x44, 0x10, 0x05,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x5f, 0x48, 0x4f, 0x52, 0x52, 0x41, 0x59, 0x10, 0x06, 0x12, 0x0a,
	0x0a, 0x06, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x45, 0x10, 0x07, 0x22, 0x33, 0x0a, 0x0a, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x22,
	0x83, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x5f, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x20, 0x48, 0x01, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6d, 0x6d, 0x6d, 0x73, 0x30, 0x37, 0x2f, 0x62,
	0x6c, 0x6f, 0x67, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schemas_proto_rawDescOnce sync.Once
	file_schemas_proto_rawDescData = file_schemas_proto_rawDesc
)

func file_schemas_proto_rawDescGZIP() []byte {
	file_schemas_proto_rawDescOnce.Do(func() {
		file_schemas_proto_rawDescData = protoimpl.X.CompressGZIP(file_schemas_proto_rawDescData)
	})
	return file_schemas_proto_rawDescData
}

var file_schemas_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_schemas_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_schemas_proto_goTypes = []interface{}{
	(Post_Stage)(0),         // 0: blogs.Post.Stage
	(Post_Status)(0),        // 1: blogs.Post.Status
	(Comment_TargetType)(0), // 2: blogs.Comment.TargetType
	(React_Type)(0),         // 3: blogs.React.Type
	(React_TargetType)(0),   // 4: blogs.React.TargetType
	(User_Type)(0),          // 5: blogs.User.Type
	(*Post)(nil),            // 6: blogs.Post
	(*Comment)(nil),         // 7: blogs.Comment
	(*React)(nil),           // 8: blogs.React
	(*User)(nil),            // 9: blogs.User
}
var file_schemas_proto_depIdxs = []int32{
	9,  // 0: blogs.Post.user:type_name -> blogs.User
	7,  // 1: blogs.Post.comments:type_name -> blogs.Comment
	6,  // 2: blogs.Post.revisions:type_name -> blogs.Post
	0,  // 3: blogs.Post.stage:type_name -> blogs.Post.Stage
	1,  // 4: blogs.Post.status:type_name -> blogs.Post.Status
	8,  // 5: blogs.Post.reacts:type_name -> blogs.React
	9,  // 6: blogs.Comment.user:type_name -> blogs.User
	7,  // 7: blogs.Comment.replies:type_name -> blogs.Comment
	8,  // 8: blogs.Comment.reacts:type_name -> blogs.React
	2,  // 9: blogs.Comment.target_type:type_name -> blogs.Comment.TargetType
	3,  // 10: blogs.React.type:type_name -> blogs.React.Type
	4,  // 11: blogs.React.target_type:type_name -> blogs.React.TargetType
	5,  // 12: blogs.User.type:type_name -> blogs.User.Type
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_schemas_proto_init() }
func file_schemas_proto_init() {
	if File_schemas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schemas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*React); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schemas_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_schemas_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schemas_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schemas_proto_goTypes,
		DependencyIndexes: file_schemas_proto_depIdxs,
		EnumInfos:         file_schemas_proto_enumTypes,
		MessageInfos:      file_schemas_proto_msgTypes,
	}.Build()
	File_schemas_proto = out.File
	file_schemas_proto_rawDesc = nil
	file_schemas_proto_goTypes = nil
	file_schemas_proto_depIdxs = nil
}
